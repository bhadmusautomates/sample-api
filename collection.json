{
  "collection": {
    "info": {
      "_postman_id": "c150f9e1-0288-40d5-baee-afda0e57ec1b",
      "name": "API-Training-First-API-Test",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "updatedAt": "2024-03-26T14:08:55.000Z",
      "createdAt": "2024-03-02T14:27:50.000Z",
      "lastUpdatedBy": "4496516",
      "uid": "4496516-c150f9e1-0288-40d5-baee-afda0e57ec1b"
    },
    "item": [
      {
        "name": "Get Status",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "6350e977-07df-4959-bb17-f1d4e8fc49f9",
              "exec": [
                "pm.test(\"Response status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Response has a JSON content type\", function () {",
                "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
                "});",
                "",
                "pm.test(\"Response is an object with message property\", function () {",
                "    pm.expect(pm.response.json()).to.be.an('object').that.has.property('message');",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "708463f0-ac43-4762-bf57-8ea173bceb2a",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [],
          "url": {
            "raw": "https://simple-books-api.glitch.me/",
            "protocol": "https",
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "path": [
              ""
            ]
          }
        },
        "response": [],
        "uid": "4496516-708463f0-ac43-4762-bf57-8ea173bceb2a"
      },
      {
        "name": "Register an API Client",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "0e72df9f-c261-4e49-a41d-40ec981465cf",
              "exec": [
                "pm.test(\"Response status code is 201\", function () {",
                "    pm.response.to.have.status(201);",
                "});",
                "",
                "pm.test(\"Response is an object with accessToken property\", function () {",
                "    pm.expect(pm.response.json()).to.be.an('object').that.has.property('accessToken');",
                "});",
                "",
                "pm.test(\"Response has the required Content-Type header set to 'application/json'\", function () {",
                "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
                "});",
                "",
                "",
                "pm.test(\"Access token is a non-empty string\", function () {",
                "  const responseData = pm.response.json();",
                "  pm.expect(responseData.accessToken).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Access token should not be empty\");",
                "});",
                "",
                "",
                "pm.test(\"Access token property should be a string\", function () {",
                "  const responseData = pm.response.json();",
                "  ",
                "  pm.expect(responseData.accessToken).to.be.a('string');",
                "});",
                "",
                "var resp = pm.response.json()",
                "var token = resp.accessToken",
                "",
                "pm.collectionVariables.set('access_token', token)"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "2c15158c-fe9f-4f9d-93c1-2c461dd9eb99",
              "exec": [
                "var email_server = \"@yopmail.com\"",
                "var email_prefix = \"testflight\"",
                "var date_time = new Date().getTime()",
                "var final_email = email_prefix+date_time+email_server",
                "",
                "pm.collectionVariables.set(\"email\", final_email)"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "03f50c9b-863b-428c-9328-4d311d03ebdf",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n   \"clientName\": \"Princess\",\n   \"clientEmail\": \"{{email}}\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "https://simple-books-api.glitch.me/api-clients/",
            "protocol": "https",
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "path": [
              "api-clients",
              ""
            ]
          }
        },
        "response": [
          {
            "id": "898bd316-236f-457e-af66-37abd9e496ea",
            "name": "201 Created",
            "originalRequest": {
              "method": "POST",
              "header": [],
              "body": {
                "mode": "raw",
                "raw": "{\n   \"clientName\": \"Princess\",\n   \"clientEmail\": \"{{email}}\"\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "https://simple-books-api.glitch.me/api-clients/",
                "protocol": "https",
                "host": [
                  "simple-books-api",
                  "glitch",
                  "me"
                ],
                "path": [
                  "api-clients",
                  ""
                ]
              }
            },
            "status": "Created",
            "code": 201,
            "_postman_previewlanguage": "json",
            "header": [
              {
                "key": "Date",
                "value": "Sun, 03 Mar 2024 09:32:49 GMT"
              },
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              },
              {
                "key": "Content-Length",
                "value": "82"
              },
              {
                "key": "Connection",
                "value": "keep-alive"
              },
              {
                "key": "x-powered-by",
                "value": "Express"
              },
              {
                "key": "etag",
                "value": "W/\"52-CRA8b8Sq5xzLDIh97niNysRcVp4\""
              }
            ],
            "cookie": [],
            "responseTime": null,
            "body": "{\n    \"accessToken\": \"7a1ffd3dddb93ee85201c62cc8a9a76751665bbc0e30f6d83d2521e315839051\"\n}",
            "uid": "4496516-898bd316-236f-457e-af66-37abd9e496ea"
          },
          {
            "id": "3d5c9d14-8418-4957-9e47-2f081324084e",
            "name": "409 Conflict",
            "originalRequest": {
              "method": "POST",
              "header": [],
              "body": {
                "mode": "raw",
                "raw": "{\n   \"clientName\": \"Princess\",\n   \"clientEmail\": \"testflight@yopmail.com\"\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "https://simple-books-api.glitch.me/api-clients/",
                "protocol": "https",
                "host": [
                  "simple-books-api",
                  "glitch",
                  "me"
                ],
                "path": [
                  "api-clients",
                  ""
                ]
              }
            },
            "status": "Conflict",
            "code": 409,
            "_postman_previewlanguage": "json",
            "header": [
              {
                "key": "Date",
                "value": "Sun, 03 Mar 2024 09:37:19 GMT"
              },
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              },
              {
                "key": "Content-Length",
                "value": "65"
              },
              {
                "key": "Connection",
                "value": "keep-alive"
              },
              {
                "key": "x-powered-by",
                "value": "Express"
              },
              {
                "key": "etag",
                "value": "W/\"41-rjAEsJfLskSzU5wzBOncJcKHOOY\""
              }
            ],
            "cookie": [],
            "responseTime": null,
            "body": "{\n    \"error\": \"API client already registered. Try a different email.\"\n}",
            "uid": "4496516-3d5c9d14-8418-4957-9e47-2f081324084e"
          },
          {
            "id": "d7e974b0-2476-4b1f-9c59-7985ee34e955",
            "name": "400 Bad Request",
            "originalRequest": {
              "method": "POST",
              "header": [],
              "body": {
                "mode": "raw",
                "raw": "{\n   \"clientName\": \"Princess\",\n   \"clientEmail\": \"testflight@yopmail.\"\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "https://simple-books-api.glitch.me/api-clients/",
                "protocol": "https",
                "host": [
                  "simple-books-api",
                  "glitch",
                  "me"
                ],
                "path": [
                  "api-clients",
                  ""
                ]
              }
            },
            "status": "Bad Request",
            "code": 400,
            "_postman_previewlanguage": "json",
            "header": [
              {
                "key": "Date",
                "value": "Sun, 03 Mar 2024 09:37:37 GMT"
              },
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              },
              {
                "key": "Content-Length",
                "value": "44"
              },
              {
                "key": "Connection",
                "value": "keep-alive"
              },
              {
                "key": "x-powered-by",
                "value": "Express"
              },
              {
                "key": "etag",
                "value": "W/\"2c-PwGtxEQOZiq6R8vQs7E1MW/WeUI\""
              }
            ],
            "cookie": [],
            "responseTime": null,
            "body": "{\n    \"error\": \"Invalid or missing client email.\"\n}",
            "uid": "4496516-d7e974b0-2476-4b1f-9c59-7985ee34e955"
          },
          {
            "id": "fb54ce11-3e4f-4825-a85d-f2815f61274e",
            "name": "422 Unprocessable Entity",
            "originalRequest": {
              "method": "POST",
              "header": [],
              "body": {
                "mode": "raw",
                "raw": "{\n   \"clientName\": \"Princess\",\n   \"clientEmail\": {{email}}\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "url": {
                "raw": "https://simple-books-api.glitch.me/api-clients/",
                "protocol": "https",
                "host": [
                  "simple-books-api",
                  "glitch",
                  "me"
                ],
                "path": [
                  "api-clients",
                  ""
                ]
              }
            },
            "status": "Unprocessable Entity",
            "code": 422,
            "_postman_previewlanguage": "plain",
            "header": [
              {
                "key": "Date",
                "value": "Sun, 03 Mar 2024 09:40:25 GMT"
              },
              {
                "key": "Content-Type",
                "value": "text/plain; charset=utf-8"
              },
              {
                "key": "Content-Length",
                "value": "20"
              },
              {
                "key": "Connection",
                "value": "keep-alive"
              },
              {
                "key": "x-powered-by",
                "value": "Express"
              },
              {
                "key": "access-control-allow-origin",
                "value": "*"
              },
              {
                "key": "access-control-allow-methods",
                "value": "GET, POST, OPTIONS, PUT, DELETE"
              },
              {
                "key": "etag",
                "value": "W/\"14-Buua4h4AYmB7XaCZYxzO2/gkScQ\""
              }
            ],
            "cookie": [],
            "responseTime": null,
            "body": "Unprocessable Entity",
            "uid": "4496516-fb54ce11-3e4f-4825-a85d-f2815f61274e"
          }
        ],
        "uid": "4496516-03f50c9b-863b-428c-9328-4d311d03ebdf"
      },
      {
        "name": "Get Books",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "7b59dce9-5b0c-45ea-adab-c0f0bf64d9d4",
              "exec": [
                "",
                "pm.test(\"Response status code is 200\", function () {",
                "    pm.expect(pm.response.code).to.equal(200);",
                "});",
                "",
                "",
                "pm.test(\"Response has the required fields - id, name, type, and available\", function () {",
                "    const responseData = pm.response.json();",
                "    ",
                "    pm.expect(responseData).to.be.an('array');",
                "    responseData.forEach(function(book) {",
                "        pm.expect(book.id).to.exist;",
                "        pm.expect(book.name).to.exist;",
                "        pm.expect(book.type).to.exist;",
                "        pm.expect(book.available).to.exist;",
                "    });",
                "});",
                "",
                "",
                "pm.test(\"Name is a non-empty string\", function () {",
                "  const responseData = pm.response.json();",
                "  ",
                "  pm.expect(responseData).to.be.an('array');",
                "  responseData.forEach(function(book) {",
                "    pm.expect(book.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");",
                "  });",
                "});",
                "",
                "",
                "pm.test(\"Type is a non-empty string\", function () {",
                "  const responseData = pm.response.json();",
                "  ",
                "  pm.expect(responseData).to.be.an('array');",
                "  responseData.forEach(function(book) {",
                "    pm.expect(book.type).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Type should not be empty\");",
                "  });",
                "});",
                "",
                "",
                "pm.test(\"Available is a boolean value\", function () {",
                "    const responseData = pm.response.json();",
                "    ",
                "    responseData.forEach(function(book) {",
                "        pm.expect(book.available).to.be.a('boolean');",
                "    });",
                "});",
                "",
                ""
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "id": "281e5f19-c4ac-4529-addd-3778263f7637",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [],
          "url": {
            "raw": "https://simple-books-api.glitch.me/books",
            "protocol": "https",
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "path": [
              "books"
            ]
          }
        },
        "response": [],
        "uid": "4496516-281e5f19-c4ac-4529-addd-3778263f7637"
      },
      {
        "name": "Get a single book",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "4e5d7ca2-2f49-406a-b882-1ff3e86b9259",
              "exec": [
                "pm.test(\"Schema is valid\", function () {",
                "  var schema = {",
                "    type: \"object\",",
                "    properties: {",
                "      id: { type: \"number\" },",
                "      name: { type: \"string\" },",
                "      author: { type: \"string\" },",
                "      isbn: { type: \"string\" },",
                "      type: { type: \"string\" },",
                "      price: { type: \"number\" },",
                "      \"current-stock\": { type: \"number\" },",
                "      available: { type: \"boolean\" }",
                "    },",
                "    required: [\"id\", \"name\", \"author\", \"isbn\", \"type\", \"price\", \"current-stock\", \"available\"],",
                "  };",
                "",
                "  var response = pm.response.json();",
                "  pm.expect(tv4.validate(response, schema)).to.be.true;",
                "});",
                "",
                "pm.test(\"Response status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "",
                "pm.test(\"ISBN is in a valid format\", function () {",
                "    const responseData = pm.response.json();",
                "    ",
                "    pm.expect(responseData).to.be.an('object');",
                "});",
                "",
                "",
                "pm.test(\"Price should be a non-negative number\", function () {",
                "  const responseData = pm.response.json();",
                "  ",
                "  pm.expect(responseData).to.be.an('object');",
                "  pm.expect(responseData.price).to.be.a('number');",
                "  pm.expect(responseData.price).to.be.at.least(0);",
                "});",
                "",
                "",
                "pm.test(\"Available field is a boolean value\", function () {",
                "  const responseData = pm.response.json();",
                "  ",
                "  pm.expect(responseData).to.be.an('object');",
                "  pm.expect(responseData.available).to.be.a('boolean');",
                "});",
                "",
                ""
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "id": "27d2aa5b-a245-4eaf-adf0-c67c303cbf6a",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [],
          "url": {
            "raw": "https://simple-books-api.glitch.me/books/:bookId",
            "protocol": "https",
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "path": [
              "books",
              ":bookId"
            ],
            "query": [
              {
                "key": "",
                "value": "",
                "disabled": true
              }
            ],
            "variable": [
              {
                "key": "bookId",
                "value": "1"
              }
            ]
          }
        },
        "response": [],
        "uid": "4496516-27d2aa5b-a245-4eaf-adf0-c67c303cbf6a"
      },
      {
        "name": "Place a book order",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c0782f74-c375-48f8-9cb4-9e0d24306a45",
              "exec": [
                "var resp = pm.response.json()",
                "var order_no = resp.orderId",
                "",
                "pm.collectionVariables.set(\"orderId\", order_no)",
                "pm.test(\"Response status code is 201\", function () {",
                "    pm.expect(pm.response.code).to.equal(201);",
                "});",
                "",
                "",
                "pm.test(\"Response has the required fields - created and orderId\", function () {",
                "    const responseData = pm.response.json();",
                "    ",
                "    pm.expect(responseData).to.be.an('object');",
                "    pm.expect(responseData).to.have.property('created');",
                "    pm.expect(responseData).to.have.property('orderId');",
                "});",
                "",
                "",
                "pm.test(\"OrderId is a non-empty string\", function () {",
                "  const responseData = pm.response.json();",
                "  ",
                "  pm.expect(responseData.orderId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"OrderId should be a non-empty string\");",
                "});",
                "",
                "",
                "pm.test(\"Order ID should be a non-empty string\", function () {",
                "  const responseData = pm.response.json();",
                "",
                "  pm.expect(responseData).to.be.an('object');",
                "  pm.expect(responseData.orderId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Order ID should be a non-empty string\");",
                "});",
                "",
                "",
                "pm.test(\"Verify that the 'created' field is a boolean value\", function () {",
                "  const responseData = pm.response.json();",
                "  ",
                "  pm.expect(responseData).to.be.an('object');",
                "  pm.expect(responseData.created).to.be.a('boolean');",
                "});",
                "",
                ""
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "id": "8a16f43b-d4c7-4d3b-87d2-bfcf556176d5",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{access_token}}",
                "type": "string"
              }
            ]
          },
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"bookId\": 1,\n  \"customerName\": \"John\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "https://simple-books-api.glitch.me/orders",
            "protocol": "https",
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "path": [
              "orders"
            ]
          }
        },
        "response": [],
        "uid": "4496516-8a16f43b-d4c7-4d3b-87d2-bfcf556176d5"
      },
      {
        "name": "Get all orders",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "d212e7e4-54e0-4a4f-9423-55e1bcdc038c",
              "exec": [
                "",
                "pm.test(\"Response status code is 200\", function () {",
                "    pm.expect(pm.response.code).to.equal(200);",
                "});",
                "",
                "",
                "pm.test(\"Response has the correct Content-Type header\", function () {",
                "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
                "});",
                "",
                "",
                "pm.test(\"Response body is an array\", function () {",
                "    const responseData = pm.response.json();",
                "    pm.expect(responseData).to.be.an('array');",
                "});",
                "",
                "",
                "// Test for response schema",
                "pm.test(\"Schema is valid\", function () {",
                "  var schema = {",
                "    type: \"array\"",
                "  };",
                "",
                "  var response = pm.response.json();",
                "  pm.expect(tv4.validate(response, schema)).to.be.true;",
                "});"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "id": "02bbe389-75a3-4d9d-aaf6-8afafeb7001a",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{access_token}}",
                "type": "string"
              }
            ]
          },
          "method": "GET",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "https://simple-books-api.glitch.me/orders",
            "protocol": "https",
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "path": [
              "orders"
            ]
          }
        },
        "response": [],
        "uid": "4496516-02bbe389-75a3-4d9d-aaf6-8afafeb7001a"
      },
      {
        "name": "Get an order",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "4d15fe43-3998-4190-8b52-6dcfcec28d28",
              "exec": [
                "",
                "pm.test(\"Response status code is 200\", function () {",
                "  pm.expect(pm.response.code).to.equal(200);",
                "});",
                "",
                "",
                "pm.test(\"Response has the required fields\", function () {",
                "    const responseData = pm.response.json();",
                "    ",
                "    pm.expect(responseData).to.be.an('object');",
                "    pm.expect(responseData).to.have.property('id');",
                "    pm.expect(responseData).to.have.property('bookId');",
                "    pm.expect(responseData).to.have.property('customerName');",
                "    pm.expect(responseData).to.have.property('createdBy');",
                "    pm.expect(responseData).to.have.property('quantity');",
                "    pm.expect(responseData).to.have.property('timestamp');",
                "});",
                "",
                "",
                "pm.test(\"Id is a non-empty string\", function () {",
                "    const responseData = pm.response.json();",
                "    ",
                "    pm.expect(responseData).to.be.an('object');",
                "    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should be a non-empty string\");",
                "});",
                "",
                "",
                "pm.test(\"Quantity is a non-negative integer\", function () {",
                "    const responseData = pm.response.json();",
                "    ",
                "    pm.expect(responseData.quantity).to.be.a('number');",
                "    pm.expect(responseData.quantity).to.be.at.least(0, \"Quantity should be a non-negative integer\");",
                "});",
                "",
                "",
                "pm.test(\"Timestamp is in a valid date format\", function () {",
                "  const responseData = pm.response.json();",
                "  ",
                "  pm.expect(responseData).to.be.an('object');",
                "});",
                "",
                ""
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "id": "be38e3ce-4849-4f94-ac1c-5a8deae06055",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{access_token}}",
                "type": "string"
              }
            ]
          },
          "method": "GET",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"customerName\": \"John\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "https://simple-books-api.glitch.me/orders/:orderId",
            "protocol": "https",
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "path": [
              "orders",
              ":orderId"
            ],
            "variable": [
              {
                "key": "orderId",
                "value": "{{orderId}}"
              }
            ]
          }
        },
        "response": [],
        "uid": "4496516-be38e3ce-4849-4f94-ac1c-5a8deae06055"
      },
      {
        "name": "Update an order",
        "id": "e3e59ebe-bfef-4b1b-9c8f-d92f8c229314",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{access_token}}",
                "type": "string"
              }
            ]
          },
          "method": "PATCH",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "https://simple-books-api.glitch.me/orders/:orderId/",
            "protocol": "https",
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "path": [
              "orders",
              ":orderId",
              ""
            ],
            "variable": [
              {
                "key": "orderId",
                "value": "{{orderId}}"
              }
            ]
          }
        },
        "response": [],
        "uid": "4496516-e3e59ebe-bfef-4b1b-9c8f-d92f8c229314"
      },
      {
        "name": "Delete an order",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "35c56685-ac78-4c42-9dde-4760957adb24",
              "exec": [
                "pm.test(\"Status code is 204\", function () {\r",
                "    pm.response.to.have.status(204);\r",
                "});\r",
                "\r",
                "pm.test(\"Status code name has string OK\", function () {\r",
                "    pm.response.to.have.status(\"No Content\");\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "d4939bb6-4085-41bd-86ee-8c17033bac37",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{access_token}}",
                "type": "string"
              }
            ]
          },
          "method": "DELETE",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "https://simple-books-api.glitch.me/orders/:orderId",
            "protocol": "https",
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "path": [
              "orders",
              ":orderId"
            ],
            "variable": [
              {
                "key": "orderId",
                "value": "{{orderId}}"
              }
            ]
          }
        },
        "response": [],
        "uid": "4496516-d4939bb6-4085-41bd-86ee-8c17033bac37"
      },
      {
        "name": "https://simple-books-api.glitch.me/api-clients/",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "0e72df9f-c261-4e49-a41d-40ec981465cf",
              "exec": [
                "var resp = pm.response.json()",
                "var token = resp.accessToken",
                "",
                "pm.collectionVariables.set('access_token', token)",
                "",
                "pm.test(\"Response status code is 201\", function () {",
                "    pm.response.to.have.status(201);",
                "});",
                "",
                "pm.test(\"Response is a JSON object with accessToken property\", function () {",
                "    pm.expect(pm.response.json()).to.be.an('object').that.has.property('accessToken');",
                "});",
                "",
                "pm.test(\"Access token is a non-empty string\", function () {",
                "  const responseData = pm.response.json();",
                "  ",
                "  pm.expect(responseData.accessToken).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Access token should not be empty\");",
                "});",
                "",
                "",
                "pm.test(\"Response Content-Type is application/json\", function () {",
                "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
                "});",
                "",
                "",
                "pm.test(\"Only accessToken property exists in the response\", function () {",
                "    const responseData = pm.response.json();",
                "    ",
                "    pm.expect(responseData).to.be.an('object');",
                "    pm.expect(responseData.accessToken).to.exist;",
                "    pm.expect(Object.keys(responseData).length).to.equal(1, \"Unexpected properties found in the response\");",
                "});",
                "",
                ""
              ],
              "type": "text/javascript",
              "packages": {}
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "2c15158c-fe9f-4f9d-93c1-2c461dd9eb99",
              "exec": [
                "var email_server = \"@yopmail.com\"",
                "var email_prefix = \"testing\"",
                "var date_time = new Date().getTime()",
                "var final_email = email_prefix+date_time+email_server",
                "",
                "pm.collectionVariables.set(\"email\", final_email)"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "id": "faa871c3-9d79-4342-8df7-36b0ee651950",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n   \"clientName\": \"Princess\",\n   \"clientEmail\": \"{{emails}}\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "https://simple-books-api.glitch.me/api-clients/",
            "protocol": "https",
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "path": [
              "api-clients",
              ""
            ]
          }
        },
        "response": [],
        "uid": "4496516-faa871c3-9d79-4342-8df7-36b0ee651950"
      },
      {
        "name": "https://simple-books-api.glitch.me/api-clients/",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "0e72df9f-c261-4e49-a41d-40ec981465cf",
              "exec": [
                "var resp = pm.response.json()",
                "var token = resp.accessToken",
                "",
                "pm.collectionVariables.set('access_token', token)",
                "",
                "pm.test(\"Response status code is 201\", function () {",
                "    pm.response.to.have.status(201);",
                "});",
                "",
                "pm.test(\"Response is a JSON object with accessToken property\", function () {",
                "    pm.expect(pm.response.json()).to.be.an('object').that.has.property('accessToken');",
                "});",
                "",
                "pm.test(\"Access token is a non-empty string\", function () {",
                "  const responseData = pm.response.json();",
                "  ",
                "  pm.expect(responseData.accessToken).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Access token should not be empty\");",
                "});",
                "",
                "",
                "pm.test(\"Response Content-Type is application/json\", function () {",
                "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
                "});",
                "",
                "",
                "pm.test(\"Only accessToken property exists in the response\", function () {",
                "    const responseData = pm.response.json();",
                "    ",
                "    pm.expect(responseData).to.be.an('object');",
                "    pm.expect(responseData.accessToken).to.exist;",
                "    pm.expect(Object.keys(responseData).length).to.equal(1, \"Unexpected properties found in the response\");",
                "});",
                "",
                ""
              ],
              "type": "text/javascript",
              "packages": {}
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "2c15158c-fe9f-4f9d-93c1-2c461dd9eb99",
              "exec": [
                "var email_server = \"@yopmail.com\"",
                "var email_prefix = \"testing\"",
                "var date_time = new Date().getTime()",
                "var final_email = email_prefix+date_time+email_server",
                "",
                "pm.collectionVariables.set(\"email\", final_email)"
              ],
              "type": "text/javascript",
              "packages": {}
            }
          }
        ],
        "id": "5a0538e3-b4d6-4abd-a578-1ca0b40ff0de",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n   \"clientName\": \"Princess\",\n   \"clientEmail\": \"testflight@yopmail.\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "https://simple-books-api.glitch.me/api-clients/",
            "protocol": "https",
            "host": [
              "simple-books-api",
              "glitch",
              "me"
            ],
            "path": [
              "api-clients",
              ""
            ]
          }
        },
        "response": [],
        "uid": "4496516-5a0538e3-b4d6-4abd-a578-1ca0b40ff0de"
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "2a2c5f48-304e-4954-b319-999f2cf00c9d",
          "type": "text/javascript",
          "exec": [
            ""
          ]
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "e5a250a8-e149-4fc3-aa09-d46c14995814",
          "type": "text/javascript",
          "exec": [
            ""
          ]
        }
      }
    ],
    "variable": [
      {
        "key": "email",
        "value": ""
      },
      {
        "key": "orderId",
        "value": ""
      },
      {
        "key": "access_token",
        "value": ""
      }
    ]
  }
}